worker_processes auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    set_real_ip_from  10.0.0.0/8;
    set_real_ip_from  172.16.0.0/12;
    set_real_ip_from  192.168.0.0/16;
    real_ip_header    X-Real-IP;

    #gzip  on;

    upstream php-handler {
        server app:9000;
    }

    # https://serversforhackers.com/c/redirect-http-to-https-nginx
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;
        return 301 https://$host:8443$request_uri;
    }

    server {
        # listen 8080;
        # listen [::]:8080;

        # https://nginx.org/en/docs/http/configuring_https_servers.html
        # https://www.nginx.com/blog/nginx-1-13-9-http2-server-push/
        listen 443 ssl http2;
        listen [::]:443 ssl http2;

        # server_name "servhostname.local";
        # server_name _;
        server_name breitbandig.de *.breitbandig.de netzgeneration.com *.netzgeneration.com;

        # include snippets/self-signed.conf;
        # include snippets/le-old.conf;
        include snippets/le-certbot.conf;
        include snippets/tls-params.conf;

        # Add headers to serve security related headers
        # Before enabling Strict-Transport-Security headers please read into this
        # topic first.
        #add_header Strict-Transport-Security "max-age=15768000; includeSubDomains; preload;" always;
        #
        # WARNING: Only add the preload option once you read about
        # the consequences in https://hstspreload.org/. This option
        # will add the domain to a hardcoded list that is shipped
        # in all major browsers and getting removed from this list
        # could take several months.
        add_header Referrer-Policy "no-referrer" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-Download-Options "noopen" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Permitted-Cross-Domain-Policies "none" always;
        add_header X-Robots-Tag "none" always;
        add_header X-XSS-Protection "1; mode=block" always;

        # HTTPS only
        add_header Strict-Transport-Security "max-age=15768000; includeSubDomains; preload;";

        # Remove X-Powered-By, which is an information leak
        fastcgi_hide_header X-Powered-By;

        # Path to the root of your installation
        root /var/www/html;

        # redirect /
        # https://stackoverflow.com/questions/17738088
        location = / {
            # rewrite "^$" /nextcloud/index.php break;
            return 301 /nextcloud;
        }

        location = /robots.txt {
            allow all;
            log_not_found off;
            access_log off;
        }
        # See https://help.nextcloud.com/t/properly-resolving-well-known-caldav-or-well-known-carddav/82617

        # The following 2 rules are only needed for the user_webfinger app.
        # Uncomment it if you're planning to use this app.
        #rewrite ^/.well-known/host-meta /public.php?service=host-meta last;
        #rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json last;

        # The following rule is only needed for the Social app.
        # Uncomment it if you're planning to use this app.
        #rewrite ^/.well-known/webfinger /public.php?service=webfinger last;

        location = /.well-known/carddav {
            return 301 $scheme://$host:$server_port/nextcloud/remote.php/dav;
        }

        location = /.well-known/caldav {
            return 301 $scheme://$host:$server_port/nextcloud/remote.php/dav;
        }

        # set max upload size
        client_max_body_size 10G;
        fastcgi_buffers 64 4K;

        # Enable gzip but do not remove ETag headers
        gzip on;
        gzip_vary on;
        gzip_comp_level 4;
        gzip_min_length 256;
        gzip_proxied expired no-cache no-store private no_last_modified no_etag auth;
        gzip_types application/atom+xml application/javascript application/json application/ld+json application/manifest+json application/rss+xml application/vnd.geo+json application/vnd.ms-fontobject application/x-font-ttf application/x-web-app-manifest+json application/xhtml+xml application/xml font/opentype image/bmp image/svg+xml image/x-icon text/cache-manifest text/css text/plain text/vcard text/vnd.rim.location.xloc text/vtt text/x-component text/x-cross-domain-policy;

        # Uncomment if your server is build with the ngx_pagespeed module
        # This module is currently not supported.
        #pagespeed off;

        # https://serversforhackers.com/c/nginx-php-in-subdirectory
        location /nextcloud {
            alias /var/www/html;
            # index index.html index.php

            location /nextcloud/ {
                rewrite ^ /nextcloud/index.php;
            }

            try_files $uri $uri/ @nested;
            
            # https://www.digitalocean.com/community/tutorials/understanding-nginx-server-and-location-block-selection-algorithms-de
            location ^~ /nextcloud/push/ {
                proxy_pass http://notify_push:7867/;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "Upgrade";
                proxy_set_header Host $host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            }

            location ~ ^\/nextcloud\/(?:index|remote|public|cron|core\/ajax\/update|status|ocs\/v[12]|updater\/.+|oc[ms]-provider\/.+)\.php(?:$|\/) {
                # include snippets/fastcgi-php.conf;
                fastcgi_split_path_info ^(.+?\.php)(\/.*|)$;
                set $path_info $fastcgi_path_info;
                try_files $fastcgi_script_name =404;
                include fastcgi_params;
                # fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                fastcgi_param PATH_INFO $path_info;

                fastcgi_param SCRIPT_FILENAME $request_filename;
                # fastcgi_pass unix:/var/run/php/php7.2-fpm.sock;

                # Avoid sending the security headers twice
                fastcgi_param modHeadersAvailable true;

                # Enable pretty urls
                fastcgi_param front_controller_active true;
                fastcgi_pass php-handler;
                fastcgi_intercept_errors on;
                fastcgi_request_buffering off;
            }

            location ~ ^\/nextcloud\/(?:build|tests|config|lib|3rdparty|templates|data)\/ {
                # rewrite ^/nextcloud(\/.*)$ $1;
                deny all;
            }
            
            location ~ ^\/nextcloud\/(?:\.|autotest|occ|issue|indie|db_|console) {
                # rewrite ^/nextcloud(\/.*)$ $1;
                deny all;
            }

            location ~ ^\/nextcloud\/(?:updater|oc[ms]-provider)(?:$|\/) {
                # rewrite ^/nextcloud(\/.*)$ $1;
                try_files $uri/ =404;
                index index.php;
            }

            # Adding the cache control header for js, css and map files
            # Make sure it is BELOW the PHP block
            location ~ \.(?:css|js|woff2?|svg|gif|map)$ {
                # rewrite ^/nextcloud(\/.*)$ $1;
                try_files $uri /nextcloud/index.php$request_uri;
                add_header Cache-Control "public, max-age=15778463";
                # Add headers to serve security related headers (It is intended to
                # have those duplicated to the ones above)
                # Before enabling Strict-Transport-Security headers please read into
                # this topic first.
                #add_header Strict-Transport-Security "max-age=15768000; includeSubDomains; preload;" always;
                #
                # WARNING: Only add the preload option once you read about
                # the consequences in https://hstspreload.org/. This option
                # will add the domain to a hardcoded list that is shipped
                # in all major browsers and getting removed from this list
                # could take several months.
                add_header Referrer-Policy "no-referrer" always;
                add_header X-Content-Type-Options "nosniff" always;
                add_header X-Download-Options "noopen" always;
                add_header X-Frame-Options "SAMEORIGIN" always;
                add_header X-Permitted-Cross-Domain-Policies "none" always;
                add_header X-Robots-Tag "none" always;
                add_header X-XSS-Protection "1; mode=block" always;

                # Optional: Don't log access to assets
                access_log off;
            }

            location ~ \.(?:png|html|ttf|ico|jpg|jpeg|bcmap|mp4|webm)$ {
                # rewrite ^/nextcloud(\/.*)$ $1;
                try_files $uri /nextcloud/index.php$request_uri;
                # Optional: Don't log access to other assets
                access_log off;
            }
        }

        location @nested {
            rewrite /nextcloud/(.*)$ /nextcloud/index.php/$1 last;
        }

        # location / {
        #     rewrite ^ /index.php;
        # }

        # location ~ ^\/(?:index|remote|public|cron|core\/ajax\/update|status|ocs\/v[12]|updater\/.+|oc[ms]-provider\/.+)\.php(?:$|\/) {
        #     fastcgi_split_path_info ^(.+?\.php)(\/.*|)$;
        #     set $path_info $fastcgi_path_info;
        #     try_files $fastcgi_script_name =404;
        #     include fastcgi_params;
        #     fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        #     fastcgi_param PATH_INFO $path_info;
        #     # fastcgi_param HTTPS on;

        #     # Avoid sending the security headers twice
        #     fastcgi_param modHeadersAvailable true;

        #     # Enable pretty urls
        #     fastcgi_param front_controller_active true;
        #     fastcgi_pass php-handler;
        #     fastcgi_intercept_errors on;
        #     fastcgi_request_buffering off;
        # }

    }
}
